{"version":3,"sources":["clock.js","App.js","serviceWorker.js","index.js"],"names":["defaultBreak","defaultSession","SESSION","BREAK","stringify","x","parseInt","toString","Clock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","break","session","currentLabel","min","sec","running","breakDecrement","bind","assertThisInitialized","breakIncrement","sessionDecrement","sessionIncrement","timerCtrl","reset","timed","setState","obj","newObj","document","getElementById","play","countDown","timer","setInterval","react_default","a","createElement","id","src","className","onClick","Component","App","clock","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98cf7108.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nconst defaultBreak = 5;\r\nconst defaultSession = 25;\r\n\r\nconst SESSION = \"Session\";\r\nconst BREAK = \"Break\";\r\n\r\nlet bell = \"http://audiosoundclips.com/wp-content/uploads/2012/01/Bicyclebell.mp3\";\r\n\r\nfunction stringify(x) {\r\n  if (parseInt(x) < 10){\r\n    return '0' + parseInt(x).toString();\r\n  } else {\r\n    return x;\r\n  }\r\n}\r\n\r\nfunction countDown(obj) {\r\n  let newObj = obj;\r\n  let min = obj.min;\r\n  let sec = obj.sec;\r\n  if (sec !== 0){\r\n    newObj.sec = sec - 1;\r\n  } else {\r\n    if (min !== 0){\r\n      newObj.min = min - 1;\r\n      newObj.sec = 59;\r\n    } else {\r\n      document.getElementById(\"beep\").play();\r\n      switch (obj.currentLabel){\r\n        case (SESSION):\r\n          newObj.currentLabel = BREAK;\r\n          newObj.min = obj.break;\r\n          break;\r\n        case (BREAK):\r\n          newObj.currentLabel = SESSION;\r\n          newObj.min = obj.session;\r\n          break;\r\n        default:\r\n          // pass\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return newObj;\r\n}\r\n\r\nclass Clock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      break: defaultBreak,\r\n      session: defaultSession,\r\n      currentLabel: SESSION,\r\n      min: defaultSession,\r\n      sec: 0,\r\n      running: false\r\n    }\r\n    this.breakDecrement = this.breakDecrement.bind(this);\r\n    this.breakIncrement = this.breakIncrement.bind(this);\r\n    this.sessionDecrement = this.sessionDecrement.bind(this);\r\n    this.sessionIncrement = this.sessionIncrement.bind(this);\r\n    this.timerCtrl = this.timerCtrl.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.timed = this.timed.bind(this);\r\n  }\r\n\r\n  breakDecrement() {\r\n    if (this.state.break > 1) {\r\n      this.setState({\r\n        break: this.state.break - 1\r\n      });\r\n      if ((this.state.currentLabel === BREAK) & !(this.state.running)){\r\n        this.setState({\r\n          min:  this.state.break - 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n  breakIncrement() {\r\n    if (this.state.break < 59) {\r\n      this.setState({\r\n        break: this.state.break + 1\r\n      });\r\n      if ((this.state.currentLabel === BREAK) & !(this.state.running)){\r\n        this.setState({\r\n          min:  this.state.break + 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n  sessionDecrement() {\r\n    if (this.state.session > 1) {\r\n      this.setState({\r\n        session: this.state.session - 1\r\n      });\r\n      if ((this.state.currentLabel === SESSION) & !(this.state.running)){\r\n        this.setState({\r\n          min:  this.state.session - 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n  sessionIncrement() {\r\n    if (this.state.session < 59) {\r\n      this.setState({\r\n        session: this.state.session + 1\r\n      });\r\n      if ((this.state.currentLabel === SESSION) & !(this.state.running)){\r\n        this.setState({\r\n          min:  this.state.session + 1\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  timerCtrl() {\r\n    this.setState({\r\n      running: !(this.state.running)\r\n    });\r\n  }\r\n  reset() {\r\n    this.setState({\r\n      break: defaultBreak,\r\n      session: defaultSession,\r\n      currentLabel: SESSION,\r\n      min: defaultSession,\r\n      sec: 0,\r\n      running: false\r\n    });\r\n  }\r\n\r\n  timed() {\r\n    if (this.state.running) {\r\n      this.setState(countDown(this.state));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.timed, 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <audio id=\"beep\" src={bell} />\r\n        <div className=\"grid1x2\">\r\n          <div>\r\n            <div id=\"break-label\">Break Length</div>\r\n            <div>\r\n              <div onClick={this.breakIncrement} className=\"button\" id=\"break-increment\">+</div>\r\n              <div id=\"break-length\">{this.state.break}</div>\r\n              <div onClick={this.breakDecrement} className=\"button\" id=\"break-decrement\">-</div>\r\n            </div>\r\n          </div>\r\n          <div />\r\n          <div>\r\n            <div id=\"session-label\">Session Length</div>\r\n            <div>\r\n              <div onClick={this.sessionIncrement} className=\"button\" id=\"session-increment\">+</div>\r\n              <div id=\"session-length\">{this.state.session}</div>\r\n              <div onClick={this.sessionDecrement} className=\"button\" id=\"session-decrement\">-</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"timer\">\r\n          <div id=\"timer-label\">{this.state.currentLabel}</div>\r\n          <div id=\"time-left\">{stringify(this.state.min)}:{stringify(this.state.sec)}</div>\r\n        </div>\r\n        <div>\r\n          <div className=\"button\" id=\"start_stop\" onClick={this.timerCtrl}>Start/Stop</div>\r\n          <div className=\"button\" id=\"reset\" onClick={this.reset}>Reset</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React, { Component } from 'react';\nimport Clock from './clock.js';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <h1> Pomodoro Clock </h1>\n        <hr className=\"hr\" />\n        <Clock />\n        <hr className=\"hr\" />\n        <small>parvathy-santhosh 2018</small>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}